<?xml version="1.0" encoding="UTF-8"?><record_update table="scan_table_check">
    <scan_table_check action="INSERT_OR_UPDATE">
        <active>true</active>
        <advanced>false</advanced>
        <category>performance</category>
        <conditions table="sys_script">active=true^action_query=true^scriptLIKEquery()^EQ<item endquery="false" field="active" goto="false" newquery="false" operator="=" or="false" value="true"/>
            <item endquery="false" field="action_query" goto="false" newquery="false" operator="=" or="false" value="true"/>
            <item endquery="false" field="script" goto="false" newquery="false" operator="LIKE" or="false" value="query()"/>
            <item endquery="true" field="" goto="false" newquery="false" operator="=" or="false" value=""/>
        </conditions>
        <description>Query business rules that query themselves will continue to loop indefinitely until being caught by the platforms recursion limit. This can build up to an excessive response time and possibly cause the transaction to time out or create performance issues.&#13;
&#13;
For example if the query business rule is on the 'incident' table the code should NOT contain statements such as the following:&#13;
var gr = new GlideRecord('incident');&#13;
gr.query();&#13;
&#13;
This will result in the business rule calling itself again, which would then call itself again and continue indefinitely until caught by the platform.</description>
        <documentation_url>https://support.servicenow.com/kb?id=kb_article_view&amp;sysparm_article=KB0813039</documentation_url>
        <finding_type>scan_finding</finding_type>
        <name>Query business rules should not use query() on GlideRecord</name>
        <priority>3</priority>
        <resolution_details>If this issue is identified please review and modify the code to make necessary changes to prevent recursion.</resolution_details>
        <run_condition/>
        <score_max>100</score_max>
        <score_min>0</score_min>
        <score_scale>1</score_scale>
        <script><![CDATA[(function (engine) {

    // Add your code here

})(engine);]]></script>
        <short_description>Query business rules should not use query() on GlideRecord</short_description>
        <sys_class_name>scan_table_check</sys_class_name>
        <sys_created_by>ali.abdulrazak</sys_created_by>
        <sys_created_on>2021-10-11 10:06:07</sys_created_on>
        <sys_id>552c3f3a400330107f44dbb3b15cf2f8</sys_id>
        <sys_name>Query business rules should not use query() on GlideRecord</sys_name>
        <sys_package display_value="Example Instance Checks" source="x_appe_exa_checks">ca8467c41b9abc10ce0f62c3b24bcbaa</sys_package>
        <sys_policy/>
        <sys_scope display_value="Example Instance Checks">ca8467c41b9abc10ce0f62c3b24bcbaa</sys_scope>
        <sys_update_name>scan_table_check_552c3f3a400330107f44dbb3b15cf2f8</sys_update_name>
        <table>sys_script</table>
        <use_manifest>false</use_manifest>
    </scan_table_check>
</record_update>
