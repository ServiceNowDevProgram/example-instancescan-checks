<?xml version="1.0" encoding="UTF-8"?><record_update table="scan_linter_check">
    <scan_linter_check action="INSERT_OR_UPDATE">
        <active>true</active>
        <category>performance</category>
        <description>If a cache flush is triggered as part of a non-ootb script execution this will require the platform to rebuild the cache before returning to its BAU state. This activity has a significant performance impact.</description>
        <documentation_url>https://developer.servicenow.com/app.do#!/api_doc?v=newyork&amp;id=r_SGSYS-setProperty_S_S_S</documentation_url>
        <finding_type/>
        <name>Cache flushed as part of scripts</name>
        <priority>2</priority>
        <resolution_details>Remove any cache flush triggers unless necessary. Recommended is only the pre-defined cache flush actions that are built into out the box solutions.&#13;
&#13;
Do not make use of gs.cacheFlush() in scripts.&#13;
&#13;
Care should be taken when setting system properties (sys_properties) using this method as it causes a system-wide cache flush. Each flush can cause system degradation while the caches rebuild. If a value must be updated often, it should not be stored as a system property. In general, you should only place values in the sys_properties table that do not frequently change.</resolution_details>
        <run_condition/>
        <score_max>100</score_max>
        <score_min>0</score_min>
        <score_scale>1</score_scale>
        <script><![CDATA[(function(engine) {

    engine.rootNode.visit(function(node) {
        // AST will have the '.' as parent to what we need. Start here and visit child nodes
        if (node.getTypeName() === "GETPROP") {
			var gs_found = false;
			var method_found = false;
			
			node.visit(function(childnode) {
				// now we are child to '.', check if we are gs or setProperty
				if (childnode.getTypeName() != "NAME") {
					return;
				}
				
				if (childnode.getNameIdentifier() === "setProperty" || childnode.getNameIdentifier() === "cacheFlush") {
					method_found = true;
					return;
				}

				if (childnode.getNameIdentifier() === "gs") {
					gs_found = true;
					return;
				}
				
			});
			
			if (gs_found && method_found) {
				engine.finding.incrementWithNode(node);
			}
        }
    });
	
})(engine);]]></script>
        <short_description>Cache flushed as part of scripts</short_description>
        <sys_class_name>scan_linter_check</sys_class_name>
        <sys_created_by>daniel.draes</sys_created_by>
        <sys_created_on>2021-08-27 07:18:40</sys_created_on>
        <sys_id>0b7623d41b1afc10ce0f62c3b24bcb24</sys_id>
        <sys_mod_count>11</sys_mod_count>
        <sys_name>Cache flushed as part of scripts</sys_name>
        <sys_package display_value="Example Instance Checks" source="x_appe_exa_checks">ca8467c41b9abc10ce0f62c3b24bcbaa</sys_package>
        <sys_policy/>
        <sys_scope display_value="Example Instance Checks">ca8467c41b9abc10ce0f62c3b24bcbaa</sys_scope>
        <sys_update_name>scan_linter_check_0b7623d41b1afc10ce0f62c3b24bcb24</sys_update_name>
        <sys_updated_by>mark.roethof</sys_updated_by>
        <sys_updated_on>2021-10-03 16:55:38</sys_updated_on>
    </scan_linter_check>
</record_update>
