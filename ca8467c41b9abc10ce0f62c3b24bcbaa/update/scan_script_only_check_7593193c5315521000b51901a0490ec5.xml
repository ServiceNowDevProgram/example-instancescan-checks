<?xml version="1.0" encoding="UTF-8"?><record_update table="scan_script_only_check">
    <scan_script_only_check action="INSERT_OR_UPDATE">
        <active>true</active>
        <category>manageability</category>
        <description>In general, you should use the array literal notation when possible. It is easier to read, it gives the compiler a chance to optimize your code, and it's mostly faster too.</description>
        <documentation_url/>
        <finding_type>scan_finding</finding_type>
        <name>Don't use new Array()</name>
        <priority>3</priority>
        <resolution_details>Validated new Array() pattern on Business rules, Client scripts and Script includes</resolution_details>
        <run_condition/>
        <score_max>100</score_max>
        <score_min>0</score_min>
        <score_scale>1</score_scale>
        <script><![CDATA[(function(finding, current) {

    var grBr = new GlideRecord('sys_script'); //Business rule
    grBr.addActiveQuery();
    grBr.query();
    while (grBr.next()) {
        var scriptContent = grBr.getValue('script');
        // Regular expression to check for 'new Array()'
        var pattern = /new\s+Array\s*\(/;
        if (pattern.test(scriptContent)) {
            finding.increment();
        }

    }

    var grCl = new GlideRecord('sys_script_client'); //Client script
    grCl.addActiveQuery();
    grCl.query();
    while (grCl.next()) {
        var scriptContent1 = grCl.getValue('script');
        // Regular expression to check for 'new Array()'
        var pattern1 = /new\s+Array\s*\(/;
        if (pattern1.test(scriptContent1)) {
            finding.increment();
        }

    }

    var grSi = new GlideRecord('sys_script_include'); //Script Include
    grSi.addActiveQuery();
    grSi.query();
    while (grSi.next()) {
        var scriptContent2 = grSi.getValue('script');
        // Regular expression to check for 'new Array()'
        var pattern2 = /new\s+Array\s*\(/;
        if (pattern2.test(scriptContent2)) {
            finding.increment();
        }

    }



})(finding, current);]]></script>
        <short_description>Don't use new Array()</short_description>
        <sys_class_name>scan_script_only_check</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-10-14 18:14:56</sys_created_on>
        <sys_id>7593193c5315521000b51901a0490ec5</sys_id>
        <sys_mod_count>2</sys_mod_count>
        <sys_name>Don't use new Array()</sys_name>
        <sys_package display_value="Example Instance Checks" source="x_appe_exa_checks">ca8467c41b9abc10ce0f62c3b24bcbaa</sys_package>
        <sys_policy/>
        <sys_scope display_value="Example Instance Checks">ca8467c41b9abc10ce0f62c3b24bcbaa</sys_scope>
        <sys_update_name>scan_script_only_check_7593193c5315521000b51901a0490ec5</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-10-14 18:18:21</sys_updated_on>
    </scan_script_only_check>
    <sys_translated_text action="delete_multiple" query="documentkey=7593193c5315521000b51901a0490ec5"/>
    <sys_es_latest_script action="INSERT_OR_UPDATE">
        <id>7593193c5315521000b51901a0490ec5</id>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-10-14 18:14:55</sys_created_on>
        <sys_id>86771d305355521000b51901a0490e92</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-10-14 18:14:55</sys_updated_on>
        <table>scan_script_only_check</table>
        <use_es_latest>true</use_es_latest>
    </sys_es_latest_script>
</record_update>
